version: '3.9'
  
services:
  #################
  ## Go Services ##
  #################
  frontend:
    image: golang:1.21
    environment:
      PORT: ${FRONEND_PORT:-8080}
    networks:
      - kong-net
    restart: unless-stopped
    depends_on:
      - kafka
    volumes:
      - .:/app
      - go-mod:/go/pkg/mod
    working_dir: /app/frontend
    ports:
      - "${FRONEND_PORT:-8080}:${FRONEND_PORT:-8080}"
    command: go run .

  publisher:
    image: golang:1.21
    environment:
      PORT: ${PUBLISHER_PORT:-8888}
    networks:
      - kong-net
    restart: unless-stopped
    depends_on:
      - kafka
    volumes:
      - .:/app
      - go-mod:/go/pkg/mod
    working_dir: /app/publisher
    # ports:
    #   - "${PUBLISHER_PORT:-8888}:${PUBLISHER_PORT:-8888}"
    command: go run .

  subscriber:
    image: golang:1.21
    environment:
      PORT: ${SUBSCRIBER_PORT:-8889}
    networks:
      - kong-net
    restart: unless-stopped
    depends_on:
      - kafka
    volumes:
      - .:/app
      - go-mod:/go/pkg/mod
    working_dir: /app/subscriber
    # ports:
    #   - "${SUBSCRIBER_PORT:-8889}:${SUBSCRIBER_PORT:-8889}"
    command: go run .

  #################
  ## API Gateway ##
  #################
  kong:
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    user: "${KONG_USER:-kong}"
    environment:
      KONG_DATABASE: off
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: "${KONG_PROXY_LISTEN:-0.0.0.0:8000}"
      KONG_ADMIN_LISTEN: "${KONG_ADMIN_LISTEN:-0.0.0.0:8001}"
      KONG_ADMIN_GUI_LISTEN: "${KONG_ADMIN_GUI_LISTEN:-0.0.0.0:8002}"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_PREFIX: ${KONG_PREFIX:-/var/run/kong}
      KONG_DECLARATIVE_CONFIG: "/opt/kong/kong.yaml"
    networks:
      - kong-net
    ports:
      - "${KONG_INBOUND_PROXY_LISTEN:-0.0.0.0}:8000:8000/tcp"
      - "${KONG_INBOUND_SSL_PROXY_LISTEN:-0.0.0.0}:8443:8443/tcp"

      - "127.0.0.1:8001:8001/tcp"
      - "127.0.0.1:8444:8444/tcp"
      - "127.0.0.1:8002:8002/tcp"
    healthcheck:
      test: [ "CMD", "kong", "health" ]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure:5
    read_only: true
    volumes:
      - kong_prefix_vol:${KONG_PREFIX:-/var/run/kong}
      - kong_tmp_vol:/tmp
      - ./api-gateway/config:/opt/kong
    security_opt:
      - no-new-privileges

  ###################
  ## Kafka and Co. ##
  ###################
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.1
    networks:
      - kong-net
    restart: unless-stopped
    depends_on:
      - kong
    logging:
      driver: none
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.3.1
    networks:
      - kong-net
    restart: unless-stopped
    depends_on:
      - zookeeper
    logging:
      driver: none
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  ###################
  ## Debugging     ##
  ###################
  busybox:
    image: busybox
    networks:
      - kong-net
    restart: unless-stopped
    depends_on:
      - kafka
    command: tail -f /dev/null

networks:
  kong-net:
    external: false

volumes:
  go-mod:
  kong_prefix_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs
  kong_tmp_vol:
    driver_opts:
      type: tmpfs
      device: tmpfs
